#!/usr/bin/env node
/* eslint-disable no-sync */

const { execFileSync } = require('child_process')
const fs = require('fs')
const path = require('path')
process.chdir(path.join(__dirname, '../'))

console.log('Cleaning up any previous builds')
require('rimraf').sync('build')

console.log('Building')
for(const [ input, output ] of Object.entries({
	app: 'build/app',
	boot: 'build/boot',
})) {
	fs.mkdirSync(output, { recursive: true })
	execFileSync('node', [
		require.resolve('@babel/cli/lib/babel'),
		'--copy-files',
		'--source-maps', 'inline',
		'--out-dir', output,
		input
	])
}

console.log('Setting up bins')
fs.mkdirSync('build/bin')
fs.copyFileSync('bin/cli', 'build/bin/cli')

console.log('Finalizing boot files')
for(const file of [ 'build/boot/Cli.js', 'build/boot/Http.js' ]) {
	let content = fs.readFileSync(file).toString()
	content = content.replace(/require\('@babel\/register'\)/g, '')
	fs.writeFileSync(file, content)
}

console.log('Finished')
